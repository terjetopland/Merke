@page "/ongoingraces"

@using BlazorApp.Services
@using BlazorApp.Models
@using BlazorApp.Dtos

@inject IParticipantService ParticipantService
@inject IRaceService RaceService

<PageTitle>Ongoing Races</PageTitle>

<div class="container">
    <table class="table" style="margin-top: 10px;">
        <thead>
        <!-- Should be hided if there is no races -->
        <tr>
            <th>Race id</th>
            <th>Race name</th>
            <th>Start time</th>
        </tr>
        </thead>
        
        <tbody>
        @foreach (var ongoingRaces in _races)
        {
            <tr>
                <td>@ongoingRaces.Id</td>
                <td>@ongoingRaces.Name</td>
                <td>@ongoingRaces.StartRace</td>
                <td><button @onclick="() => ViewRaceInfo(ongoingRaces.Id)" class="btn btn-primary">View more race info</button></td>
            </tr>
        }
        </tbody>
    </table>
</div>

<hr/>
<div class="container">
    <div class="row">
        <div class="col-sm-6">
            @{
                if (_raceSwitchOn)
                {
                    <h3>Participants in race @_currentRaceId</h3>
                    <table class="table table-bordered table-responsive">
                        <tbody>
                        <tr>
                            <th>Participant id</th>
                            <th>Full name</th>
                            <th>Result</th>
                        </tr>
                        @foreach (var participant in _participants)
                        {
                            <tr>
                                <td>@participant.Id</td>
                                <td>@participant.Name</td>
                                <td>@participant.Result</td>
                                @if (!participant.EndTime.HasValue)
                                {
                                    <td><button  @onclick="() => SetEndTime(participant.Id, _currentRaceId)" class="btn btn-primary">Set Time</button></td>
                                }
                                else
                                {
                                    <td><button  @onclick="() => SetEndTime(participant.Id, _currentRaceId)" class="btn btn-secondary">Set Time Again</button></td>
                                }
                            </tr>
                        }

                        </tbody>
                    </table>
                    @if (_race.EndRace is null && _race.StartRace is not null)
                    {
                        <button @onclick="() => EndRace(_race.Id)" class="btn btn-dark">End Race</button>
                    }
                }
            }
        </div>
    </div>
</div>


@code
{
    private List<Race> _races = new();
    private List<ParticipantDto> _participants = new();
    private Race _race = new();
    private int _currentRaceId;
    private bool _raceSwitchOn;

    protected override void OnInitialized()
    {
        _races = RaceService.GetOngoingRaces();
    }

    private void ViewRaceInfo(int raceId)
    {
        var race = RaceService.GetRace(raceId);
        var previousRaceId = _currentRaceId;
        _currentRaceId = race.Id;
        _race = GetRace(_currentRaceId);
        _participants = ParticipantService.GetParticipants(race.Id);
        ViewRaceHeading(previousRaceId);
    }
    
    private void ViewRaceHeading(int prevRaceId)
    {
        if (prevRaceId == _currentRaceId)
        {
            _raceSwitchOn = !_raceSwitchOn;
        }
        else
            _raceSwitchOn = true;
    }

    private void SetEndTime(int participantId, int raceId)
    {
        ParticipantService.SetEndTime(participantId, raceId);
        _participants = ParticipantService.GetParticipants(raceId);
    }

    private void EndRace(int raceId)
    {
        RaceService.EndRace(raceId);
    }

    private Race GetRace(int raceId)
    {
        var race = RaceService.GetRace(raceId);
        return race;
    }
}
